/**
 * \file grammar.txt
 * 	\brief File with a grammar especification example.
 *  \date 05/11/2009
 *  \author    Kilmurray, Gerardo Luis.
 *  \author    Picco, Gonzalo M.
 */

/* 
 * Archivo de prueba de gramatica de atributos
 * que especifica un AST.
 */

//////// bloque de dominio semantico /////////////////////
semantics domains
	
	sort int;
		
	op infix (5, left) +: int , int->int;
	op infix (50, non-assoc) * : int , int->int;
	op (99,_) sqr : int -> int;
	op postfix & : int -> int;	

	sort string, character;
	sort pepe;
	sort adrian;

	op prefix (_,right) %: string -> string;
	op (8,non-assoc) %: string -> adrian;
	op infix (5,left) + : int , int -> string;
		
	function f: int, int -> string;
	function g: string -> int;
	
//////// bloque de atributos /////////////////////
attributes
	valor : syn <int> of all;
	
	lexema, termino : syn <string> of all - {E, T};
	lexx  : syn <string> of all - {T};
	type  : inh <string> of all;
	
	grade : <int> of {E};
	
//////// bloque de reglas /////////////////////
rules

	E ::=	E '+' T
				compute
					E[0].valor = T[0].valor * %T[0].valor + T[0].valor;
				end
		| 	T
			  	compute
			  		E[0].valor =  f(T[0].valor&);
	  			end
	;
	T ::=	id '*' id
				compute
					T[0].valor = id[0].valor * id[1].valor;
					T[0].type = "id";
				end
	;
	
	id ::=	'1' 
				compute
					id[0].valor = 1; 
					id[0].type = "int"; 
				end
	     |  '0'
				compute
					id[0].valor = 0; 
					id[0].type = "int"; 
				end
	;                                                    
	
	
	
	
	
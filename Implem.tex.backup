\chapter{Introducci\'on}
\label{chap:implem}
\minitoc


bla bla

\section{GNU/linux}

bla bla

\section{Métodos de Evaluación}

Los métodos estáticos deben tener en cuenta todos los posibles árboles sintácticos posibles a ser generados por la gramática y calcular todas las posibles dependencias entre las instancias de los atributos. Además, se deberán detectar las posibles depen-dencias circulares, para informar la viabilidad de su evaluación.
Esto se conoce como el problema de la circularidad, el cual se ha demostrado ser intrínsecamente exponencial [20]. El problema de la circularidad ha motivado que muchos investigadores hayan rea-lizado esfuerzos en la búsqueda e identificación de familias o subgrupos de gramáticas de atributos, para las cuales puedan detectarse circularidades con algoritmos de menor complejidad (polinomial o lineal).
Estas familias imponen restricciones sobre la gramática de atributos o sobre las dependencias entre sus atributos para garantizar que una GA no sea circular, con el costo de restringir su poder expresivo. 
Las clases de familias de gramáticas de atributos que se han utilizado para el desarrollo de herramientas eficientes y que se encuentran ampliamente analizadas en la bibliografía especializada, encontramos las s-atribuidas2 , l-atribuidas, las gramáticas de atributos ordenadas (OAG) y las absolutamente no circulares (ANCAG)[2]. En 1980, Uwe Kastens[23] caracterizó las gramáticas de atributos ordenadas y propuso un método para su evaluación, denominado secuencias de visita. Estas son secuencias de operaciones que conducen el recorrido del árbol sintáctico atribuido y realizan la evaluación de las instancias de los atributos. Kastens propone un método para generar las secuencias de visita en tiempo poli-nomial para la familia OAG.
Mas recientemente, en 1999, se han propuesto nuevas familias de GA para las que se pueden implementar evaluadores eficientes basado en métodos estáticos y con un mayor poder expresivo que las utilizadas tradicionalmente[44].


% \begin{equation}
%   T = \argmin_T E(T,R,F)
% \end{equation}
% 
% Regularization:
% 
% \begin{equation}
%   \pd{T}{t} = \Delta T
% \end{equation}

\section{An other section}

Showing a great bullet list environment:

\begin{bulletList}
 \item First point
 \item Second point
% \item Here is an abbreviation reference \nomenclature{DTI}{Diffusion Tensor Imaging} DTI
\end{bulletList}

/**
  *  \file		aritmetic.txt
  *  \brief		Attribute Grammar example for aritmetic declarations.
  *  \date		02/02/2010
  *  \author	Kilmurray, Gerardo Luis <gerakilmurray@gmail.com>
  *  \author	Picco, Gonzalo Martin <gonzalopicco@gmail.com>
  */

/****************************
 * Block of Semantic Domain *
 ****************************/
semantic domain

    /*********************
     * List of Operators *
     *********************/
    op infix    (10, non-assoc) +: int, int -> int;
    op infix    (10, left) -: int, int -> int;
    op infix    (50, left) *: int, int -> int;
    op prefix   (75, _)    -: int      -> int;
    
/***********************
 * Block of Attributes *
 ***********************/
attributes
	valor : syn <int>    of all;
	tipo  : syn	<int> of all;
	pepe  : inh<int> of all;
	
/******************
 * Block of Rules *
 ******************/
rules
    E ::= E '+' E
    		compute
    			E[0].valor = 1 + 2;
    			//E[1].tipo = "gonza  jk\n \j j";
    			E[0].tipo = 3;
    			//E[0].pepe = 1 + 2;
    			E[2].pepe = 1 + 2;
    			E[1].pepe = E[0].tipo;
    			E[1].pepe = E[0].tipo;
    		end;
    		
    E ::= T
    		compute
    			E[0].valor = 5;
    			E[0].tipo = 55 + E[0].valor;
    			T[0].pepe = 60;
    		end;
    		
    T ::= 'hola'
            compute
                T[0].valor = 9;
                T[0].tipo = 8;
            end;
            
/*       |  E '-' E
       |  E '*' E
       |  '(' E ')'
       |  '-'E
       | num
       ;

    num ::= digit num
    	 |  real num
         |  digit
         |  real
         ;
         
   digit ::= '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '0' ;
    
   real ::= digit '.' digit;*/
    
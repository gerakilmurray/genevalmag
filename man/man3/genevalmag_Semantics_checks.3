.TH "genevalmag::Semantics_checks" 3 "4 Sep 2010" "Version 1.0" "maggen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
genevalmag::Semantics_checks \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Semantics_checks.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSemantics_checks\fP ()"
.br
.ti -1c
.RI "\fB~Semantics_checks\fP ()"
.br
.ti -1c
.RI "unsigned short \fBget_precedence_level\fP () const "
.br
.ti -1c
.RI "unsigned short \fBget_index_syntax_order\fP () const "
.br
.ti -1c
.RI "void \fBincrement_precedence_level\fP ()"
.br
.ti -1c
.RI "void \fBdecrement_precedence_level\fP ()"
.br
.ti -1c
.RI "void \fBincrement_index_syntax_order\fP ()"
.br
.ti -1c
.RI "void \fBreset_semantic_context\fP ()"
.br
.ti -1c
.RI "void \fBcorrect_precedence\fP (\fBExpr_function\fP **root_tree)"
.br
.ti -1c
.RI "void \fBcorrect_associativity\fP (\fBExpr_function\fP **root_tree)"
.br
.ti -1c
.RI "bool \fBcheck_all_defined_non_terminal\fP (const map< unsigned short, \fBRule\fP > &rules, const map< string, \fBSymbol\fP > &non_terminals)"
.br
.ti -1c
.RI "bool \fBcheck_reachability\fP (const map< unsigned short, \fBRule\fP > &rules, const map< string, \fBSymbol\fP > &non_terminals, const \fBSymbol\fP *init_symbol)"
.br
.ti -1c
.RI "bool \fBcheck_well_defined_AG\fP (const map< unsigned short, \fBRule\fP > &rules)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBcorrect_subtree\fP (\fBExpr_function\fP **subtree, int index_root_subtree)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "unsigned short \fBprecedence_level\fP"
.br
.ti -1c
.RI "unsigned short \fBindex_syntax_order\fP"
.br
.RI "\fICounter of syntax order. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 22 of file Semantics_checks.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "genevalmag::Semantics_checks::Semantics_checks ()"Contructor empty of Semantics checks.
.PP
Contructor empty of Semantic check. 
.PP
Definition at line 24 of file Semantics_checks.cpp.
.PP
References index_syntax_order, and precedence_level.
.SS "genevalmag::Semantics_checks::~Semantics_checks ()"Destructor of Semantics checks.
.PP
Destructor of Semantic check. 
.PP
Definition at line 33 of file Semantics_checks.cpp.
.SH "Member Function Documentation"
.PP 
.SS "bool genevalmag::Semantics_checks::check_all_defined_non_terminal (const map< unsigned short, \fBRule\fP > & rules, const map< string, \fBSymbol\fP > & non_terminals)"Verifies that all non-terminals in the grammar has defines in a rule. That is, it is the left value of some rule of grammar.
.PP
\fBParameters:\fP
.RS 4
\fIrules\fP 
.br
\fInon_terminals\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
Verifies that all non-terminals in the grammar has defines in a rule. That is, it is the left value of some rule of grammar. 
.PP
Definition at line 337 of file Semantics_checks.cpp.
.PP
Referenced by genevalmag::check_well_defined().
.SS "bool genevalmag::Semantics_checks::check_reachability (const map< unsigned short, \fBRule\fP > & rules, const map< string, \fBSymbol\fP > & non_terminals, const \fBSymbol\fP * init_symbol)"Computes the boolean adjacency matrix of all the rules of the attributes grammar, then computes the Warshall algorithm for transitive closure and thus can identify from the initial symbol all symbols reachable.
.PP
\fBParameters:\fP
.RS 4
\fIrules\fP 
.br
\fInon_terminals\fP 
.br
\fIinit_symbol\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
Computes the boolean adjacency matrix of all the rules of the attributes grammar, then computes the Warshall algorithm for transitive closure and thus can identify from the initial symbol all symbols reachable. 
.PP
Definition at line 406 of file Semantics_checks.cpp.
.PP
References genevalmag::get_index(), genevalmag::Symbol::get_name(), and genevalmag::warshall_algorithm().
.PP
Referenced by genevalmag::check_well_defined().
.SS "bool genevalmag::Semantics_checks::check_well_defined_AG (const map< unsigned short, \fBRule\fP > & rules)"Checks that all synthetized attributes of the left symbols of all rule are defined with an equation. And all inherit attributes of all right symbol too.
.PP
\fBParameters:\fP
.RS 4
\fIrules\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
Checks that all synthetized attributes of the left symbols of all rule are defined with an equation. And all inherit attributes of all right symbol too. 
.PP
Definition at line 487 of file Semantics_checks.cpp.
.PP
References genevalmag::check_eq_defines_it().
.PP
Referenced by genevalmag::check_well_defined().
.SS "void genevalmag::Semantics_checks::correct_associativity (\fBExpr_function\fP ** root_tree)"Controls around the tree, that any operator who applies more than once on the same level is associated according to the signature. If it detects conflicts modifying the expression tree with rotations and resources to continue controlling.
.PP
\fBParameters:\fP
.RS 4
\fIroot_tree\fP Controls around the tree, that any operator who applies more than once on the same level is associated according to the signature. If it detects conflicts modifying the expression tree with rotations and resources to continue controlling. 
.RE
.PP

.PP
Definition at line 291 of file Semantics_checks.cpp.
.PP
References genevalmag::Expr_function::get_function(), genevalmag::k_non_assoc, genevalmag::k_right, and genevalmag::swap_root_child().
.PP
Referenced by genevalmag::save_rvalue().
.SS "void genevalmag::Semantics_checks::correct_precedence (\fBExpr_function\fP ** root_tree)"Checking from the root of the expression tree to the leaves, which all operators are applies according to their precedence. If there are conflicts resolves them doing rotations, leaving the operator with lower precedence, as the new root.
.PP
Obs: The following checks are performed and only make changes in the structure of the tree, if it fulfills the following three conditions:
.PP
.IP "\(bu" 2
Operations that are changed are at the same level of precedence (with respect wiht parentheses).
.IP "\(bu" 2
The syntactic order of the expression is not altered.
.IP "\(bu" 2
The operation with higher precedence apply first.
.PP
.PP
\fBParameters:\fP
.RS 4
\fIroot_tree\fP Checking from the root of the expression tree to the leaves, which all operators are applies according to their precedence. If there are conflicts resolves them doing rotations, leaving the operator with lower precedence, as the new root.
.RE
.PP
Obs: The following checks are performed and only make changes in the structure of the tree, if it fulfills the following three conditions:
.PP
.IP "\(bu" 2
Operations that are changed are at the same level of precedence (with respect wiht parentheses).
.IP "\(bu" 2
The syntactic order of the expression is not altered.
.IP "\(bu" 2
The operation with higher precedence apply first. 
.PP

.PP
Definition at line 209 of file Semantics_checks.cpp.
.PP
References correct_subtree(), genevalmag::Expr_function::get_function(), genevalmag::Function::get_prec(), genevalmag::Expr_function::is_postfix(), genevalmag::Expr_function::is_prefix(), genevalmag::swap_root_child(), and genevalmag::swap_root_grandson().
.PP
Referenced by correct_subtree(), genevalmag::create_root_infix_node(), genevalmag::create_root_postfix_node(), and genevalmag::create_root_prefix_node().
.SS "void genevalmag::Semantics_checks::correct_subtree (\fBExpr_function\fP ** subtree, int index_root_subtree)\fC [private]\fP"Check and correct the precendence of the operator in a subtree. 
.PP
\fBParameters:\fP
.RS 4
\fIsubtree\fP 
.br
\fIindex_root_subtree\fP Checks and correct the precendence of the operator in a subtree. 
.RE
.PP

.PP
Definition at line 172 of file Semantics_checks.cpp.
.PP
References correct_precedence(), and genevalmag::swap_root_child().
.PP
Referenced by correct_precedence().
.SS "void genevalmag::Semantics_checks::decrement_precedence_level ()"Decrements the level because a parenthesis closing. 
.PP
Definition at line 64 of file Semantics_checks.cpp.
.PP
References precedence_level.
.PP
Referenced by genevalmag::decrement_level().
.SS "unsigned short genevalmag::Semantics_checks::get_index_syntax_order () const"Returns the current index of the syntax order. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP
Returns the current index of the syntax order. 
.PP
Definition at line 48 of file Semantics_checks.cpp.
.PP
References index_syntax_order.
.PP
Referenced by genevalmag::create_func_node().
.SS "unsigned short genevalmag::Semantics_checks::get_precedence_level () const"Returns the precedence level. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP
Returns the precedence level. 
.PP
Definition at line 40 of file Semantics_checks.cpp.
.PP
References precedence_level.
.PP
Referenced by genevalmag::create_func_node().
.SS "void genevalmag::Semantics_checks::increment_index_syntax_order ()"Increments the syntax order global. 
.PP
Definition at line 72 of file Semantics_checks.cpp.
.PP
References index_syntax_order.
.PP
Referenced by genevalmag::create_func_node().
.SS "void genevalmag::Semantics_checks::increment_precedence_level ()"Increments the level because a new parenthesis opening. 
.PP
Definition at line 56 of file Semantics_checks.cpp.
.PP
References precedence_level.
.PP
Referenced by genevalmag::increment_level().
.SS "void genevalmag::Semantics_checks::reset_semantic_context ()"Resets all variables that affect in the precedence analisys. 
.PP
Definition at line 80 of file Semantics_checks.cpp.
.PP
References index_syntax_order, and precedence_level.
.PP
Referenced by genevalmag::save_rvalue().
.SH "Member Data Documentation"
.PP 
.SS "\fBgenevalmag::Semantics_checks::index_syntax_order\fP\fC [private]\fP"
.PP
Counter of syntax order. 
.PP
Definition at line 35 of file Semantics_checks.h.
.PP
Referenced by get_index_syntax_order(), increment_index_syntax_order(), reset_semantic_context(), and Semantics_checks().
.SS "unsigned short \fBgenevalmag::Semantics_checks::precedence_level\fP\fC [private]\fP"
.PP
Definition at line 29 of file Semantics_checks.h.
.PP
Referenced by decrement_precedence_level(), get_precedence_level(), increment_precedence_level(), reset_semantic_context(), and Semantics_checks().

.SH "Author"
.PP 
Generated automatically by Doxygen for maggen from the source code.
